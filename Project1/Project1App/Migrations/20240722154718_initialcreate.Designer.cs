// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project1App.Entities;

#nullable disable

namespace Project1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240722154718_initialcreate")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project1App.Entities.Login", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginId");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("Project1App.Entities.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentRoom")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Project1App.Entities.PlayerItems", b =>
                {
                    b.Property<int>("PlayerItemsId")
                        .HasColumnType("int");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("DungeonKey")
                        .HasColumnType("int");

                    b.Property<int>("Helmet")
                        .HasColumnType("int");

                    b.Property<int>("PlayerIdd")
                        .HasColumnType("int");

                    b.Property<int>("Shield")
                        .HasColumnType("int");

                    b.Property<int>("Sword")
                        .HasColumnType("int");

                    b.HasKey("PlayerItemsId");

                    b.ToTable("PlayerItems");
                });

            modelBuilder.Entity("Project1App.Entities.Player", b =>
                {
                    b.HasOne("Project1App.Entities.Login", "Login")
                        .WithOne("Player")
                        .HasForeignKey("Project1App.Entities.Player", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");
                });

            modelBuilder.Entity("Project1App.Entities.PlayerItems", b =>
                {
                    b.HasOne("Project1App.Entities.Player", "Player")
                        .WithOne("PlayerItems")
                        .HasForeignKey("Project1App.Entities.PlayerItems", "PlayerItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Project1App.Entities.Login", b =>
                {
                    b.Navigation("Player")
                        .IsRequired();
                });

            modelBuilder.Entity("Project1App.Entities.Player", b =>
                {
                    b.Navigation("PlayerItems")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
